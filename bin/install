#!/usr/bin/env bash

set -euo pipefail

current_script_path="${BASH_SOURCE[0]}"
plugin_dir="$(dirname "$(dirname "$current_script_path")")"

# shellcheck source=../lib/helpers.bash
source "${plugin_dir}/lib/helpers.bash"
# shellcheck source=../lib/utils.bash
source "${plugin_dir}/lib/utils.bash"

install_oci() {
	log_info "üöß  installing..."
	bash -c "$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)" --install-dir "${ASDF_INSTALL_PATH}"
	# TODO optional features

	# test executable
	test -x "${ASDF_INSTALL_PATH}/bin/oci" || log_failure_and_exit "Expected ${ASDF_INSTALL_PATH}/bin/oci to be executable."
	log_success "oci ${ASDF_INSTALL_VERSION} installed!"

}

another_fn() {
	tmp_download_dir=$(mktemp -d -t 'asdf_oci_XXXXXX')
	trap 'rm -rf "${tmp_download_dir}"' EXIT

	# TODO
	gcs_object="$(construct_gcs_object "${ASDF_INSTALL_VERSION}" "$(get_os_name)" "$(get_os_architecture)")"

	# if not asdf version with asdf_download_path then call download script here
	if [ -z "${ASDF_DOWNLOAD_PATH:-}" ]; then
		tmp_download_dir=$(mktemp -d -t 'asdf_oci_XXXXXX')
		trap 'rm -rf "${tmp_download_dir}"' EXIT
		log_info "‚ÑπÔ∏è  run download script for older version of asdf"
		export ASDF_DOWNLOAD_PATH="${tmp_download_dir}"

		# download
		bash "$(dirname "$0")/download"
	fi

	log_info "üì¶  extracting..."
	# TODO
	unzip "${ASDF_DOWNLOAD_PATH}/${release_object}" -C "${ASDF_INSTALL_PATH}" --strip-components=1
	log_success "extracted!"

	log_info "üöß  installing..."
	"${ASDF_INSTALL_PATH}/install.sh" --usage-reporting=false --path-update=false --quiet
	# test executable
	test -x "${ASDF_INSTALL_PATH}/bin/oci" || log_failure_and_exit "Expected ${ASDF_INSTALL_PATH}/bin/oci to be executable."
	log_success "oci ${ASDF_INSTALL_VERSION} installed!"

	# TODO: instruct on setup of shell completions. This should be some form of ".asdf/installs/oci/$version/completions
}

if [ "${ASDF_INSTALL_TYPE}" != "version" ]; then
	log_failure_and_exit "Please provide the oci version number you wish to install. See \`asdf list all oci\`"
fi

install_oci

# reshim now sdk components are installed
asdf reshim "$(get_plugin_name)" "$ASDF_INSTALL_VERSION"
